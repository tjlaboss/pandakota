Search.setIndex({"docnames": ["index", "modules", "pandakota", "pandakota.input", "pandakota.input.deck", "pandakota.input.derivatives", "pandakota.input.methods", "pandakota.input.variables", "pandakota.reader", "pandakota.reader.output", "pandakota.reader.utils"], "filenames": ["index.rst", "modules.rst", "pandakota.rst", "pandakota.input.rst", "pandakota.input.deck.rst", "pandakota.input.derivatives.rst", "pandakota.input.methods.rst", "pandakota.input.variables.rst", "pandakota.reader.rst", "pandakota.reader.output.rst", "pandakota.reader.utils.rst"], "titles": ["Welcome to pandakota\u2019s documentation!", "pandakota", "pandakota package", "pandakota.input package", "pandakota.input.deck module", "pandakota.input.derivatives module", "pandakota.input.methods module", "pandakota.input.variables module", "pandakota.reader package", "pandakota.reader.output module", "pandakota.reader.utils module"], "terms": {"i": [0, 5], "python": 0, "modul": [0, 1], "us": [0, 10], "dakota": [0, 4, 6, 7, 9], "panda": 0, "index": 0, "search": 0, "page": 0, "packag": 1, "subpackag": 1, "input": [1, 2], "submodul": [1, 2], "content": 1, "reader": [1, 2], "deck": [2, 3], "deriv": [2, 3, 6], "gradient": [2, 3, 4, 5, 6], "hessian": [2, 3, 4, 5], "method": [2, 3, 4, 5, 7], "colinycobylaoptim": [2, 3, 6], "jegaoptim": [2, 3, 6], "latinhypercubesampl": [2, 3, 6], "mogaoptim": [2, 3, 6], "montecarlosampl": [2, 3, 6], "ncsudirectoptim": [2, 3, 6], "nlpqlsqpoptim": [2, 3, 6], "optim": [2, 3, 6], "optppcgoptim": [2, 3, 6], "optppfdnewtonoptim": [2, 3, 6], "optppgnewtonoptim": [2, 3, 6], "optppnewtonoptim": [2, 3, 6], "optppoptim": [2, 3, 6], "optpppdsoptim": [2, 3, 6], "optppqnewtonoptim": [2, 3, 6], "sampl": [2, 3, 6, 9], "sogaoptim": [2, 3, 6], "variabl": [2, 3, 4], "normaluncertainvari": [2, 3, 7], "statevari": [2, 3, 7], "uniformuncertainvari": [2, 3, 7], "output": [2, 8], "read_confidence_interv": [2, 8, 9], "read_moment_statist": [2, 8, 9], "read_partial_matrix": [2, 8, 9], "read_pearson_matrix": [2, 8, 9], "read_spearman_matrix": [2, 8, 9], "util": [2, 8], "snip_text": [2, 8, 10], "string_to_stream": [2, 8, 10], "add_normal_uncertain_vari": [3, 4], "add_uniform_uncertain_vari": [3, 4], "add_vari": [3, 4], "function": [3, 4, 10], "get": [3, 4], "get_deck": [3, 4], "item": [3, 4], "normal_uncertain_vari": [3, 4], "state_vari": [3, 4], "uniform_uncertain_vari": [3, 4], "kei": [3, 5, 7], "order": [3, 5], "to_str": [3, 5, 6], "gradient_typ": [3, 5], "hessian_typ": [3, 5], "optimize_typ": [3, 6], "check_convergence_typ": [3, 6], "check_crossover_typ": [3, 6], "check_initialization_typ": [3, 6], "check_mutation_typ": [3, 6], "check_replacement_typ": [3, 6], "convergence_typ": [3, 6], "crossover_typ": [3, 6], "initialization_typ": [3, 6], "mutation_typ": [3, 6], "population_s": [3, 6], "replacement_typ": [3, 6], "seed": [3, 6], "type_rate_pair": [3, 6], "add_refin": [3, 6], "sample_typ": [3, 6], "refin": [3, 6], "requires_gradi": [3, 6], "requires_hessian": [3, 6], "min_boxsize_limit": [3, 6], "solution_target": [3, 6], "volume_boxsize_limit": [3, 6], "convergence_toler": [3, 6], "function_kei": [3, 6], "max_function_evalu": [3, 6], "max_iter": [3, 6], "check_search_method": [3, 6], "search_method": [3, 6], "check_merit_funct": [3, 6], "merit_funct": [3, 6], "nsampl": [3, 6], "block_nam": [3, 7], "mean": [3, 4, 7], "fromvari": [3, 7], "nomin": [3, 7], "properti": [3, 4, 5, 6, 7], "lower": [3, 7], "upper": [3, 7], "dtype": [3, 7], "element": [3, 7], "justifi": [3, 7], "class": [4, 5, 6, 7], "iter": [4, 5], "str": [4, 5, 6, 7, 9, 10], "base": [4, 5, 6, 7], "object": 4, "builder": 4, "The": [4, 6], "duck": 4, "type": [4, 7], "quack": 4, "like": 4, "dict": [4, 7], "attribut": [4, 5, 6, 7], "descriptor": 4, "float": [4, 5, 6, 7], "std_deviat": 4, "add": 4, "normal_uncertain": [4, 7], "lower_bound": 4, "upper_bound": 4, "uniform_uncertain": [4, 7], "var": 4, "list": 4, "default": 4, "none": [4, 5, 6, 7], "work": 4, "IN": 4, "progress": 4, "first": 5, "second": 5, "derivative_typ": 5, "fd_step_siz": 5, "id_numer": 5, "int": [5, 6], "id_analyt": 5, "abc": [5, 6, 7], "abstract": [5, 6, 7], "bace": 5, "thi": [5, 7], "meant": 5, "instanti": 5, "directli": 5, "method_sourc": 5, "interval_typ": 5, "1": 5, "step_scal": 5, "quasi_approxim": 5, "id_quasi": 5, "damp": 5, "bool": [5, 6], "fals": [5, 6, 10], "2": 5, "initial_delta": 6, "variable_toler": 6, "constrain": 6, "BY": 6, "linear": 6, "approxim": 6, "coliny_cobyla": 6, "crossover_r": 6, "mutation_r": 6, "num_par": 6, "num_offspr": 6, "flat_file_path": 6, "jega": 6, "classmethod": [6, 7], "ct": 6, "cot": 6, "mt": 6, "rt": 6, "multi_point_binari": 6, "multi_point_parameterized_binari": 6, "multi_point_r": 6, "shuffle_random": 6, "flat_fil": 6, "simple_random": 6, "unique_random": 6, "bit_random": 6, "offset_cauchi": 6, "offset_norm": 6, "offset_uniform": 6, "replace_uniform": 6, "todo": 6, "chang": 6, "soga": 6, "moga": 6, "elitist": 6, "roulette_wheel": 6, "unique_roulette_wheel": 6, "lh": 6, "refinement_sampl": 6, "all": 6, "arg": 6, "niching_typ": 6, "postprocessor_typ": 6, "kwarg": 6, "metric_track": 6, "num_gener": 6, "percent_chang": 6, "below_limit": 6, "random": 6, "ncsu_direct": 6, "nlpql": 6, "sequenti": 6, "quadrat": 6, "program": 6, "nlpql_sqp": 6, "objective_funct": 6, "max_step": 6, "gradient_toler": 6, "specul": 6, "conjug": 6, "optpp_cg": 6, "true": [6, 9], "centering_paramet": 6, "steplength_to_boundari": 6, "finit": 6, "differ": 6, "newton": 6, "optpp_fd_newton": 6, "least": 6, "squar": 6, "calibr": 6, "optpp_g_newton": 6, "optpp_newton": 6, "other": [6, 7], "opt": 6, "sm": 6, "gradient_based_line_search": 6, "tr_pd": 6, "trust_region": 6, "value_based_line_search": 6, "famili": 6, "local": 6, "mf": 6, "argaez_tapia": 6, "el_bakri": 6, "van_shanno": 6, "optpp": 6, "one": 6, "optpp_": 6, "search_scheme_s": 6, "simplex": 6, "free": 6, "optpp_pd": 6, "quasi": 6, "optpp_q_newton": 6, "response_funct": 6, "average_fitness_track": 6, "best_fitness_track": 6, "favor_feas": 6, "contain": 7, "std_dev": 7, "describ": 7, "normal": 7, "distribut": 7, "discret": 7, "state": 7, "cast": 7, "anoth": 7, "uniform": 7, "align": 7, "": 7, "name": 7, "valu": 7, "nice": 7, "read": [9, 10], "thing": 9, "from": 9, "file": 9, "text": [9, 10], "autosnip": 9, "95": 9, "confid": 9, "interv": 9, "moment": 9, "statist": 9, "datafram": 9, "partial": 9, "correl": 9, "matrix": 9, "pearson": 9, "spearman": 9, "rank": 9, "helper": 10, "daktoa": 10, "start": 10, "end": 10, "n": 10, "allow_eof": 10, "crude": 10, "snip": 10, "string": 10, "stringio": 10}, "objects": {"": [[2, 0, 0, "-", "pandakota"]], "pandakota": [[3, 0, 0, "-", "input"], [8, 0, 0, "-", "reader"]], "pandakota.input": [[4, 0, 0, "-", "deck"], [5, 0, 0, "-", "derivatives"], [6, 0, 0, "-", "methods"], [7, 0, 0, "-", "variables"]], "pandakota.input.deck": [[4, 1, 1, "", "Deck"]], "pandakota.input.deck.Deck": [[4, 2, 1, "", "add_normal_uncertain_variable"], [4, 2, 1, "", "add_uniform_uncertain_variable"], [4, 2, 1, "", "add_variable"], [4, 3, 1, "", "functions"], [4, 2, 1, "", "get"], [4, 2, 1, "", "get_deck"], [4, 3, 1, "", "gradients"], [4, 3, 1, "", "hessians"], [4, 2, 1, "", "items"], [4, 3, 1, "", "method"], [4, 3, 1, "", "normal_uncertain_variables"], [4, 3, 1, "", "state_variables"], [4, 3, 1, "", "uniform_uncertain_variables"]], "pandakota.input.derivatives": [[5, 1, 1, "", "Derivatives"], [5, 1, 1, "", "Gradients"], [5, 1, 1, "", "Hessians"]], "pandakota.input.derivatives.Derivatives": [[5, 4, 1, "", "key"], [5, 4, 1, "", "order"], [5, 2, 1, "", "to_string"]], "pandakota.input.derivatives.Gradients": [[5, 3, 1, "", "gradient_type"], [5, 4, 1, "", "key"], [5, 4, 1, "", "order"], [5, 2, 1, "", "to_string"]], "pandakota.input.derivatives.Hessians": [[5, 3, 1, "", "hessian_type"], [5, 4, 1, "", "key"], [5, 4, 1, "", "order"], [5, 2, 1, "", "to_string"]], "pandakota.input.methods": [[6, 1, 1, "", "ColinyCobylaOptimize"], [6, 1, 1, "", "JegaOptimize"], [6, 1, 1, "", "LatinHypercubeSampling"], [6, 1, 1, "", "Method"], [6, 1, 1, "", "MogaOptimize"], [6, 1, 1, "", "MonteCarloSampling"], [6, 1, 1, "", "NcsuDirectOptimize"], [6, 1, 1, "", "NlpqlSqpOptimize"], [6, 1, 1, "", "Optimize"], [6, 1, 1, "", "OptppCgOptimize"], [6, 1, 1, "", "OptppFdNewtonOptimize"], [6, 1, 1, "", "OptppGNewtonOptimize"], [6, 1, 1, "", "OptppNewtonOptimize"], [6, 1, 1, "", "OptppOptimize"], [6, 1, 1, "", "OptppPdsOptimize"], [6, 1, 1, "", "OptppQNewtonOptimize"], [6, 1, 1, "", "Sampling"], [6, 1, 1, "", "SogaOptimize"]], "pandakota.input.methods.ColinyCobylaOptimize": [[6, 4, 1, "", "optimize_type"], [6, 2, 1, "", "to_string"]], "pandakota.input.methods.JegaOptimize": [[6, 2, 1, "", "check_convergence_type"], [6, 2, 1, "", "check_crossover_type"], [6, 2, 1, "", "check_initialization_type"], [6, 2, 1, "", "check_mutation_type"], [6, 2, 1, "", "check_replacement_type"], [6, 4, 1, "", "convergence_types"], [6, 4, 1, "", "crossover_types"], [6, 4, 1, "", "initialization_types"], [6, 4, 1, "", "mutation_types"], [6, 4, 1, "", "optimize_type"], [6, 3, 1, "", "population_size"], [6, 4, 1, "", "replacement_types"], [6, 3, 1, "", "seed"], [6, 2, 1, "", "to_string"], [6, 4, 1, "", "type_rate_pairs"]], "pandakota.input.methods.LatinHypercubeSampling": [[6, 2, 1, "", "add_refinement"], [6, 4, 1, "", "sample_type"]], "pandakota.input.methods.Method": [[6, 2, 1, "", "add_refinement"], [6, 3, 1, "", "refinements"], [6, 4, 1, "", "requires_gradients"], [6, 4, 1, "", "requires_hessians"], [6, 2, 1, "", "to_string"]], "pandakota.input.methods.MogaOptimize": [[6, 4, 1, "", "convergence_types"], [6, 4, 1, "", "optimize_type"], [6, 4, 1, "", "replacement_types"]], "pandakota.input.methods.MonteCarloSampling": [[6, 4, 1, "", "sample_type"]], "pandakota.input.methods.NcsuDirectOptimize": [[6, 3, 1, "", "min_boxsize_limit"], [6, 4, 1, "", "optimize_type"], [6, 3, 1, "", "solution_target"], [6, 2, 1, "", "to_string"], [6, 3, 1, "", "volume_boxsize_limit"]], "pandakota.input.methods.NlpqlSqpOptimize": [[6, 4, 1, "", "optimize_type"]], "pandakota.input.methods.Optimize": [[6, 3, 1, "", "convergence_tolerance"], [6, 4, 1, "", "function_key"], [6, 3, 1, "", "max_function_evaluations"], [6, 3, 1, "", "max_iterations"], [6, 4, 1, "", "optimize_type"], [6, 2, 1, "", "to_string"]], "pandakota.input.methods.OptppCgOptimize": [[6, 4, 1, "", "optimize_type"], [6, 4, 1, "", "requires_gradients"]], "pandakota.input.methods.OptppFdNewtonOptimize": [[6, 4, 1, "", "optimize_type"], [6, 4, 1, "", "requires_gradients"], [6, 4, 1, "", "requires_hessians"]], "pandakota.input.methods.OptppGNewtonOptimize": [[6, 4, 1, "", "optimize_type"], [6, 4, 1, "", "requires_gradients"], [6, 4, 1, "", "requires_hessians"]], "pandakota.input.methods.OptppNewtonOptimize": [[6, 2, 1, "", "check_search_method"], [6, 4, 1, "", "optimize_type"], [6, 4, 1, "", "requires_gradients"], [6, 4, 1, "", "requires_hessians"], [6, 4, 1, "", "search_methods"], [6, 2, 1, "", "to_string"]], "pandakota.input.methods.OptppOptimize": [[6, 2, 1, "", "check_merit_function"], [6, 4, 1, "", "merit_functions"], [6, 4, 1, "", "optimize_type"], [6, 2, 1, "", "to_string"]], "pandakota.input.methods.OptppPdsOptimize": [[6, 4, 1, "", "optimize_type"], [6, 2, 1, "", "to_string"]], "pandakota.input.methods.OptppQNewtonOptimize": [[6, 4, 1, "", "optimize_type"], [6, 4, 1, "", "requires_gradients"], [6, 4, 1, "", "requires_hessians"]], "pandakota.input.methods.Sampling": [[6, 4, 1, "", "function_key"], [6, 3, 1, "", "nsamples"], [6, 4, 1, "", "sample_type"], [6, 2, 1, "", "to_string"]], "pandakota.input.methods.SogaOptimize": [[6, 4, 1, "", "convergence_types"], [6, 4, 1, "", "optimize_type"], [6, 4, 1, "", "replacement_types"]], "pandakota.input.variables": [[7, 1, 1, "", "NormalUncertainVariable"], [7, 1, 1, "", "StateVariable"], [7, 1, 1, "", "UniformUncertainVariable"], [7, 1, 1, "", "Variable"]], "pandakota.input.variables.NormalUncertainVariable": [[7, 4, 1, "", "block_name"], [7, 3, 1, "", "mean"]], "pandakota.input.variables.StateVariable": [[7, 3, 1, "", "block_name"], [7, 2, 1, "", "fromVariable"], [7, 3, 1, "", "nominal"], [7, 3, 1, "", "properties"]], "pandakota.input.variables.UniformUncertainVariable": [[7, 4, 1, "", "block_name"], [7, 3, 1, "", "lower"], [7, 3, 1, "", "upper"]], "pandakota.input.variables.Variable": [[7, 4, 1, "", "block_name"], [7, 3, 1, "", "dtype"], [7, 3, 1, "", "element"], [7, 2, 1, "", "justify"]], "pandakota.reader": [[9, 0, 0, "-", "output"], [10, 0, 0, "-", "utils"]], "pandakota.reader.output": [[9, 5, 1, "", "read_confidence_intervals"], [9, 5, 1, "", "read_moment_statistics"], [9, 5, 1, "", "read_partial_matrix"], [9, 5, 1, "", "read_pearson_matrix"], [9, 5, 1, "", "read_spearman_matrix"]], "pandakota.reader.utils": [[10, 5, 1, "", "snip_text"], [10, 5, 1, "", "string_to_stream"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"welcom": 0, "pandakota": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "": 0, "document": 0, "indic": 0, "tabl": 0, "packag": [2, 3, 8], "subpackag": 2, "modul": [2, 3, 4, 5, 6, 7, 8, 9, 10], "content": [2, 3, 8], "input": [3, 4, 5, 6, 7], "submodul": [3, 8], "deck": 4, "deriv": 5, "method": 6, "variabl": 7, "reader": [8, 9, 10], "output": 9, "util": 10}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Welcome to pandakota\u2019s documentation!": [[0, "welcome-to-pandakota-s-documentation"]], "Indices and tables": [[0, "indices-and-tables"]], "pandakota": [[1, "pandakota"]], "pandakota package": [[2, "pandakota-package"]], "Subpackages": [[2, "subpackages"]], "Module contents": [[2, "module-pandakota"], [3, "module-pandakota.input"], [8, "module-pandakota.reader"]], "pandakota.input package": [[3, "pandakota-input-package"]], "Submodules": [[3, "submodules"], [8, "submodules"]], "pandakota.input.deck module": [[4, "module-pandakota.input.deck"]], "pandakota.input.derivatives module": [[5, "module-pandakota.input.derivatives"]], "pandakota.input.methods module": [[6, "module-pandakota.input.methods"]], "pandakota.input.variables module": [[7, "module-pandakota.input.variables"]], "pandakota.reader package": [[8, "pandakota-reader-package"]], "pandakota.reader.output module": [[9, "module-pandakota.reader.output"]], "pandakota.reader.utils module": [[10, "module-pandakota.reader.utils"]]}, "indexentries": {"module": [[2, "module-pandakota"], [3, "module-pandakota.input"], [4, "module-pandakota.input.deck"], [5, "module-pandakota.input.derivatives"], [6, "module-pandakota.input.methods"], [7, "module-pandakota.input.variables"], [8, "module-pandakota.reader"], [9, "module-pandakota.reader.output"], [10, "module-pandakota.reader.utils"]], "pandakota": [[2, "module-pandakota"]], "pandakota.input": [[3, "module-pandakota.input"]], "deck (class in pandakota.input.deck)": [[4, "pandakota.input.deck.Deck"]], "add_normal_uncertain_variable() (pandakota.input.deck.deck method)": [[4, "pandakota.input.deck.Deck.add_normal_uncertain_variable"]], "add_uniform_uncertain_variable() (pandakota.input.deck.deck method)": [[4, "pandakota.input.deck.Deck.add_uniform_uncertain_variable"]], "add_variable() (pandakota.input.deck.deck method)": [[4, "pandakota.input.deck.Deck.add_variable"]], "functions (pandakota.input.deck.deck property)": [[4, "pandakota.input.deck.Deck.functions"]], "get() (pandakota.input.deck.deck method)": [[4, "pandakota.input.deck.Deck.get"]], "get_deck() (pandakota.input.deck.deck method)": [[4, "pandakota.input.deck.Deck.get_deck"]], "gradients (pandakota.input.deck.deck property)": [[4, "pandakota.input.deck.Deck.gradients"]], "hessians (pandakota.input.deck.deck property)": [[4, "pandakota.input.deck.Deck.hessians"]], "items() (pandakota.input.deck.deck method)": [[4, "pandakota.input.deck.Deck.items"]], "method (pandakota.input.deck.deck property)": [[4, "pandakota.input.deck.Deck.method"]], "normal_uncertain_variables (pandakota.input.deck.deck property)": [[4, "pandakota.input.deck.Deck.normal_uncertain_variables"]], "pandakota.input.deck": [[4, "module-pandakota.input.deck"]], "state_variables (pandakota.input.deck.deck property)": [[4, "pandakota.input.deck.Deck.state_variables"]], "uniform_uncertain_variables (pandakota.input.deck.deck property)": [[4, "pandakota.input.deck.Deck.uniform_uncertain_variables"]], "derivatives (class in pandakota.input.derivatives)": [[5, "pandakota.input.derivatives.Derivatives"]], "gradients (class in pandakota.input.derivatives)": [[5, "pandakota.input.derivatives.Gradients"]], "hessians (class in pandakota.input.derivatives)": [[5, "pandakota.input.derivatives.Hessians"]], "gradient_type (pandakota.input.derivatives.gradients property)": [[5, "pandakota.input.derivatives.Gradients.gradient_type"]], "hessian_type (pandakota.input.derivatives.hessians property)": [[5, "pandakota.input.derivatives.Hessians.hessian_type"]], "key (pandakota.input.derivatives.derivatives attribute)": [[5, "pandakota.input.derivatives.Derivatives.key"]], "key (pandakota.input.derivatives.gradients attribute)": [[5, "pandakota.input.derivatives.Gradients.key"]], "key (pandakota.input.derivatives.hessians attribute)": [[5, "pandakota.input.derivatives.Hessians.key"]], "order (pandakota.input.derivatives.derivatives attribute)": [[5, "pandakota.input.derivatives.Derivatives.order"]], "order (pandakota.input.derivatives.gradients attribute)": [[5, "pandakota.input.derivatives.Gradients.order"]], "order (pandakota.input.derivatives.hessians attribute)": [[5, "pandakota.input.derivatives.Hessians.order"]], "pandakota.input.derivatives": [[5, "module-pandakota.input.derivatives"]], "to_string() (pandakota.input.derivatives.derivatives method)": [[5, "pandakota.input.derivatives.Derivatives.to_string"]], "to_string() (pandakota.input.derivatives.gradients method)": [[5, "pandakota.input.derivatives.Gradients.to_string"]], "to_string() (pandakota.input.derivatives.hessians method)": [[5, "pandakota.input.derivatives.Hessians.to_string"]], "colinycobylaoptimize (class in pandakota.input.methods)": [[6, "pandakota.input.methods.ColinyCobylaOptimize"]], "jegaoptimize (class in pandakota.input.methods)": [[6, "pandakota.input.methods.JegaOptimize"]], "latinhypercubesampling (class in pandakota.input.methods)": [[6, "pandakota.input.methods.LatinHypercubeSampling"]], "method (class in pandakota.input.methods)": [[6, "pandakota.input.methods.Method"]], "mogaoptimize (class in pandakota.input.methods)": [[6, "pandakota.input.methods.MogaOptimize"]], "montecarlosampling (class in pandakota.input.methods)": [[6, "pandakota.input.methods.MonteCarloSampling"]], "ncsudirectoptimize (class in pandakota.input.methods)": [[6, "pandakota.input.methods.NcsuDirectOptimize"]], "nlpqlsqpoptimize (class in pandakota.input.methods)": [[6, "pandakota.input.methods.NlpqlSqpOptimize"]], "optimize (class in pandakota.input.methods)": [[6, "pandakota.input.methods.Optimize"]], "optppcgoptimize (class in pandakota.input.methods)": [[6, "pandakota.input.methods.OptppCgOptimize"]], "optppfdnewtonoptimize (class in pandakota.input.methods)": [[6, "pandakota.input.methods.OptppFdNewtonOptimize"]], "optppgnewtonoptimize (class in pandakota.input.methods)": [[6, "pandakota.input.methods.OptppGNewtonOptimize"]], "optppnewtonoptimize (class in pandakota.input.methods)": [[6, "pandakota.input.methods.OptppNewtonOptimize"]], "optppoptimize (class in pandakota.input.methods)": [[6, "pandakota.input.methods.OptppOptimize"]], "optpppdsoptimize (class in pandakota.input.methods)": [[6, "pandakota.input.methods.OptppPdsOptimize"]], "optppqnewtonoptimize (class in pandakota.input.methods)": [[6, "pandakota.input.methods.OptppQNewtonOptimize"]], "sampling (class in pandakota.input.methods)": [[6, "pandakota.input.methods.Sampling"]], "sogaoptimize (class in pandakota.input.methods)": [[6, "pandakota.input.methods.SogaOptimize"]], "add_refinement() (pandakota.input.methods.latinhypercubesampling method)": [[6, "pandakota.input.methods.LatinHypercubeSampling.add_refinement"]], "add_refinement() (pandakota.input.methods.method method)": [[6, "pandakota.input.methods.Method.add_refinement"]], "check_convergence_type() (pandakota.input.methods.jegaoptimize class method)": [[6, "pandakota.input.methods.JegaOptimize.check_convergence_type"]], "check_crossover_type() (pandakota.input.methods.jegaoptimize class method)": [[6, "pandakota.input.methods.JegaOptimize.check_crossover_type"]], "check_initialization_type() (pandakota.input.methods.jegaoptimize class method)": [[6, "pandakota.input.methods.JegaOptimize.check_initialization_type"]], "check_merit_function() (pandakota.input.methods.optppoptimize class method)": [[6, "pandakota.input.methods.OptppOptimize.check_merit_function"]], "check_mutation_type() (pandakota.input.methods.jegaoptimize class method)": [[6, "pandakota.input.methods.JegaOptimize.check_mutation_type"]], "check_replacement_type() (pandakota.input.methods.jegaoptimize class method)": [[6, "pandakota.input.methods.JegaOptimize.check_replacement_type"]], "check_search_method() (pandakota.input.methods.optppnewtonoptimize class method)": [[6, "pandakota.input.methods.OptppNewtonOptimize.check_search_method"]], "convergence_tolerance (pandakota.input.methods.optimize property)": [[6, "pandakota.input.methods.Optimize.convergence_tolerance"]], "convergence_types (pandakota.input.methods.jegaoptimize attribute)": [[6, "pandakota.input.methods.JegaOptimize.convergence_types"]], "convergence_types (pandakota.input.methods.mogaoptimize attribute)": [[6, "pandakota.input.methods.MogaOptimize.convergence_types"]], "convergence_types (pandakota.input.methods.sogaoptimize attribute)": [[6, "pandakota.input.methods.SogaOptimize.convergence_types"]], "crossover_types (pandakota.input.methods.jegaoptimize attribute)": [[6, "pandakota.input.methods.JegaOptimize.crossover_types"]], "function_key (pandakota.input.methods.optimize attribute)": [[6, "pandakota.input.methods.Optimize.function_key"]], "function_key (pandakota.input.methods.sampling attribute)": [[6, "pandakota.input.methods.Sampling.function_key"]], "initialization_types (pandakota.input.methods.jegaoptimize attribute)": [[6, "pandakota.input.methods.JegaOptimize.initialization_types"]], "max_function_evaluations (pandakota.input.methods.optimize property)": [[6, "pandakota.input.methods.Optimize.max_function_evaluations"]], "max_iterations (pandakota.input.methods.optimize property)": [[6, "pandakota.input.methods.Optimize.max_iterations"]], "merit_functions (pandakota.input.methods.optppoptimize attribute)": [[6, "pandakota.input.methods.OptppOptimize.merit_functions"]], "min_boxsize_limit (pandakota.input.methods.ncsudirectoptimize property)": [[6, "pandakota.input.methods.NcsuDirectOptimize.min_boxsize_limit"]], "mutation_types (pandakota.input.methods.jegaoptimize attribute)": [[6, "pandakota.input.methods.JegaOptimize.mutation_types"]], "nsamples (pandakota.input.methods.sampling property)": [[6, "pandakota.input.methods.Sampling.nsamples"]], "optimize_type (pandakota.input.methods.colinycobylaoptimize attribute)": [[6, "pandakota.input.methods.ColinyCobylaOptimize.optimize_type"]], "optimize_type (pandakota.input.methods.jegaoptimize attribute)": [[6, "pandakota.input.methods.JegaOptimize.optimize_type"]], "optimize_type (pandakota.input.methods.mogaoptimize attribute)": [[6, "pandakota.input.methods.MogaOptimize.optimize_type"]], "optimize_type (pandakota.input.methods.ncsudirectoptimize attribute)": [[6, "pandakota.input.methods.NcsuDirectOptimize.optimize_type"]], "optimize_type (pandakota.input.methods.nlpqlsqpoptimize attribute)": [[6, "pandakota.input.methods.NlpqlSqpOptimize.optimize_type"]], "optimize_type (pandakota.input.methods.optimize attribute)": [[6, "pandakota.input.methods.Optimize.optimize_type"]], "optimize_type (pandakota.input.methods.optppcgoptimize attribute)": [[6, "pandakota.input.methods.OptppCgOptimize.optimize_type"]], "optimize_type (pandakota.input.methods.optppfdnewtonoptimize attribute)": [[6, "pandakota.input.methods.OptppFdNewtonOptimize.optimize_type"]], "optimize_type (pandakota.input.methods.optppgnewtonoptimize attribute)": [[6, "pandakota.input.methods.OptppGNewtonOptimize.optimize_type"]], "optimize_type (pandakota.input.methods.optppnewtonoptimize attribute)": [[6, "pandakota.input.methods.OptppNewtonOptimize.optimize_type"]], "optimize_type (pandakota.input.methods.optppoptimize attribute)": [[6, "pandakota.input.methods.OptppOptimize.optimize_type"]], "optimize_type (pandakota.input.methods.optpppdsoptimize attribute)": [[6, "pandakota.input.methods.OptppPdsOptimize.optimize_type"]], "optimize_type (pandakota.input.methods.optppqnewtonoptimize attribute)": [[6, "pandakota.input.methods.OptppQNewtonOptimize.optimize_type"]], "optimize_type (pandakota.input.methods.sogaoptimize attribute)": [[6, "pandakota.input.methods.SogaOptimize.optimize_type"]], "pandakota.input.methods": [[6, "module-pandakota.input.methods"]], "population_size (pandakota.input.methods.jegaoptimize property)": [[6, "pandakota.input.methods.JegaOptimize.population_size"]], "refinements (pandakota.input.methods.method property)": [[6, "pandakota.input.methods.Method.refinements"]], "replacement_types (pandakota.input.methods.jegaoptimize attribute)": [[6, "pandakota.input.methods.JegaOptimize.replacement_types"]], "replacement_types (pandakota.input.methods.mogaoptimize attribute)": [[6, "pandakota.input.methods.MogaOptimize.replacement_types"]], "replacement_types (pandakota.input.methods.sogaoptimize attribute)": [[6, "pandakota.input.methods.SogaOptimize.replacement_types"]], "requires_gradients (pandakota.input.methods.method attribute)": [[6, "pandakota.input.methods.Method.requires_gradients"]], "requires_gradients (pandakota.input.methods.optppcgoptimize attribute)": [[6, "pandakota.input.methods.OptppCgOptimize.requires_gradients"]], "requires_gradients (pandakota.input.methods.optppfdnewtonoptimize attribute)": [[6, "pandakota.input.methods.OptppFdNewtonOptimize.requires_gradients"]], "requires_gradients (pandakota.input.methods.optppgnewtonoptimize attribute)": [[6, "pandakota.input.methods.OptppGNewtonOptimize.requires_gradients"]], "requires_gradients (pandakota.input.methods.optppnewtonoptimize attribute)": [[6, "pandakota.input.methods.OptppNewtonOptimize.requires_gradients"]], "requires_gradients (pandakota.input.methods.optppqnewtonoptimize attribute)": [[6, "pandakota.input.methods.OptppQNewtonOptimize.requires_gradients"]], "requires_hessians (pandakota.input.methods.method attribute)": [[6, "pandakota.input.methods.Method.requires_hessians"]], "requires_hessians (pandakota.input.methods.optppfdnewtonoptimize attribute)": [[6, "pandakota.input.methods.OptppFdNewtonOptimize.requires_hessians"]], "requires_hessians (pandakota.input.methods.optppgnewtonoptimize attribute)": [[6, "pandakota.input.methods.OptppGNewtonOptimize.requires_hessians"]], "requires_hessians (pandakota.input.methods.optppnewtonoptimize attribute)": [[6, "pandakota.input.methods.OptppNewtonOptimize.requires_hessians"]], "requires_hessians (pandakota.input.methods.optppqnewtonoptimize attribute)": [[6, "pandakota.input.methods.OptppQNewtonOptimize.requires_hessians"]], "sample_type (pandakota.input.methods.latinhypercubesampling attribute)": [[6, "pandakota.input.methods.LatinHypercubeSampling.sample_type"]], "sample_type (pandakota.input.methods.montecarlosampling attribute)": [[6, "pandakota.input.methods.MonteCarloSampling.sample_type"]], "sample_type (pandakota.input.methods.sampling attribute)": [[6, "pandakota.input.methods.Sampling.sample_type"]], "search_methods (pandakota.input.methods.optppnewtonoptimize attribute)": [[6, "pandakota.input.methods.OptppNewtonOptimize.search_methods"]], "seed (pandakota.input.methods.jegaoptimize property)": [[6, "pandakota.input.methods.JegaOptimize.seed"]], "solution_target (pandakota.input.methods.ncsudirectoptimize property)": [[6, "pandakota.input.methods.NcsuDirectOptimize.solution_target"]], "to_string() (pandakota.input.methods.colinycobylaoptimize method)": [[6, "pandakota.input.methods.ColinyCobylaOptimize.to_string"]], "to_string() (pandakota.input.methods.jegaoptimize method)": [[6, "pandakota.input.methods.JegaOptimize.to_string"]], "to_string() (pandakota.input.methods.method method)": [[6, "pandakota.input.methods.Method.to_string"]], "to_string() (pandakota.input.methods.ncsudirectoptimize method)": [[6, "pandakota.input.methods.NcsuDirectOptimize.to_string"]], "to_string() (pandakota.input.methods.optimize method)": [[6, "pandakota.input.methods.Optimize.to_string"]], "to_string() (pandakota.input.methods.optppnewtonoptimize method)": [[6, "pandakota.input.methods.OptppNewtonOptimize.to_string"]], "to_string() (pandakota.input.methods.optppoptimize method)": [[6, "pandakota.input.methods.OptppOptimize.to_string"]], "to_string() (pandakota.input.methods.optpppdsoptimize method)": [[6, "pandakota.input.methods.OptppPdsOptimize.to_string"]], "to_string() (pandakota.input.methods.sampling method)": [[6, "pandakota.input.methods.Sampling.to_string"]], "type_rate_pairs (pandakota.input.methods.jegaoptimize attribute)": [[6, "pandakota.input.methods.JegaOptimize.type_rate_pairs"]], "volume_boxsize_limit (pandakota.input.methods.ncsudirectoptimize property)": [[6, "pandakota.input.methods.NcsuDirectOptimize.volume_boxsize_limit"]], "normaluncertainvariable (class in pandakota.input.variables)": [[7, "pandakota.input.variables.NormalUncertainVariable"]], "statevariable (class in pandakota.input.variables)": [[7, "pandakota.input.variables.StateVariable"]], "uniformuncertainvariable (class in pandakota.input.variables)": [[7, "pandakota.input.variables.UniformUncertainVariable"]], "variable (class in pandakota.input.variables)": [[7, "pandakota.input.variables.Variable"]], "block_name (pandakota.input.variables.normaluncertainvariable attribute)": [[7, "pandakota.input.variables.NormalUncertainVariable.block_name"]], "block_name (pandakota.input.variables.statevariable property)": [[7, "pandakota.input.variables.StateVariable.block_name"]], "block_name (pandakota.input.variables.uniformuncertainvariable attribute)": [[7, "pandakota.input.variables.UniformUncertainVariable.block_name"]], "block_name (pandakota.input.variables.variable attribute)": [[7, "pandakota.input.variables.Variable.block_name"]], "dtype (pandakota.input.variables.variable property)": [[7, "pandakota.input.variables.Variable.dtype"]], "element (pandakota.input.variables.variable property)": [[7, "pandakota.input.variables.Variable.element"]], "fromvariable() (pandakota.input.variables.statevariable class method)": [[7, "pandakota.input.variables.StateVariable.fromVariable"]], "justify() (pandakota.input.variables.variable method)": [[7, "pandakota.input.variables.Variable.justify"]], "lower (pandakota.input.variables.uniformuncertainvariable property)": [[7, "pandakota.input.variables.UniformUncertainVariable.lower"]], "mean (pandakota.input.variables.normaluncertainvariable property)": [[7, "pandakota.input.variables.NormalUncertainVariable.mean"]], "nominal (pandakota.input.variables.statevariable property)": [[7, "pandakota.input.variables.StateVariable.nominal"]], "pandakota.input.variables": [[7, "module-pandakota.input.variables"]], "properties (pandakota.input.variables.statevariable property)": [[7, "pandakota.input.variables.StateVariable.properties"]], "upper (pandakota.input.variables.uniformuncertainvariable property)": [[7, "pandakota.input.variables.UniformUncertainVariable.upper"]], "pandakota.reader": [[8, "module-pandakota.reader"]], "pandakota.reader.output": [[9, "module-pandakota.reader.output"]], "read_confidence_intervals() (in module pandakota.reader.output)": [[9, "pandakota.reader.output.read_confidence_intervals"]], "read_moment_statistics() (in module pandakota.reader.output)": [[9, "pandakota.reader.output.read_moment_statistics"]], "read_partial_matrix() (in module pandakota.reader.output)": [[9, "pandakota.reader.output.read_partial_matrix"]], "read_pearson_matrix() (in module pandakota.reader.output)": [[9, "pandakota.reader.output.read_pearson_matrix"]], "read_spearman_matrix() (in module pandakota.reader.output)": [[9, "pandakota.reader.output.read_spearman_matrix"]], "pandakota.reader.utils": [[10, "module-pandakota.reader.utils"]], "snip_text() (in module pandakota.reader.utils)": [[10, "pandakota.reader.utils.snip_text"]], "string_to_stream() (in module pandakota.reader.utils)": [[10, "pandakota.reader.utils.string_to_stream"]]}})