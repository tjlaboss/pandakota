Search.setIndex({"docnames": ["index", "modules", "pandakota", "pandakota.driver", "pandakota.driver.driver", "pandakota.driver.template", "pandakota.input", "pandakota.input.deck", "pandakota.input.derivatives", "pandakota.input.methods", "pandakota.input.variables", "pandakota.names", "pandakota.reader", "pandakota.reader.output", "pandakota.reader.utils", "pandakota.study"], "filenames": ["index.rst", "modules.rst", "pandakota.rst", "pandakota.driver.rst", "pandakota.driver.driver.rst", "pandakota.driver.template.rst", "pandakota.input.rst", "pandakota.input.deck.rst", "pandakota.input.derivatives.rst", "pandakota.input.methods.rst", "pandakota.input.variables.rst", "pandakota.names.rst", "pandakota.reader.rst", "pandakota.reader.output.rst", "pandakota.reader.utils.rst", "pandakota.study.rst"], "titles": ["Welcome to pandakota\u2019s documentation!", "pandakota", "pandakota package", "pandakota.driver package", "pandakota.driver.driver module", "pandakota.driver.template module", "pandakota.input package", "pandakota.input.deck module", "pandakota.input.derivatives module", "pandakota.input.methods module", "pandakota.input.variables module", "pandakota.names module", "pandakota.reader package", "pandakota.reader.output module", "pandakota.reader.utils module", "pandakota.study module"], "terms": {"i": [0, 8], "python": 0, "modul": [0, 1], "us": [0, 14], "dakota": [0, 9, 10, 13], "panda": 0, "index": 0, "search": 0, "page": 0, "packag": 1, "subpackag": 1, "driver": [1, 2], "submodul": 1, "content": 1, "input": [1, 2], "reader": [1, 2], "name": [1, 2, 10], "studi": [1, 2], "templat": [2, 3], "deck": [2, 6], "deriv": [2, 6, 9], "gradient": [2, 6, 8, 9], "hessian": [2, 6, 8], "method": [2, 6, 8, 10], "colinycobylaoptim": [2, 6, 9], "jegaoptim": [2, 6, 9], "latinhypercubesampl": [2, 6, 9], "mogaoptim": [2, 6, 9], "montecarlosampl": [2, 6, 9], "ncsudirectoptim": [2, 6, 9], "nlpqlsqpoptim": [2, 6, 9], "optim": [2, 6, 9], "optppcgoptim": [2, 6, 9], "optppfdnewtonoptim": [2, 6, 9], "optppgnewtonoptim": [2, 6, 9], "optppnewtonoptim": [2, 6, 9], "optppoptim": [2, 6, 9], "optpppdsoptim": [2, 6, 9], "optppqnewtonoptim": [2, 6, 9], "sampl": [2, 6, 9, 13], "sogaoptim": [2, 6, 9], "variabl": [2, 6], "normaluncertainvari": [2, 6, 10], "statevari": [2, 6, 10], "uniformuncertainvari": [2, 6, 10], "output": [2, 12], "read_confidence_interv": [2, 12, 13], "read_moment_statist": [2, 12, 13], "read_partial_matrix": [2, 12, 13], "read_pearson_matrix": [2, 12, 13], "read_spearman_matrix": [2, 12, 13], "util": [2, 12], "snip_text": [2, 12, 14], "string_to_stream": [2, 12, 14], "kei": [6, 8, 10], "order": [6, 8], "to_str": [6, 8, 9], "gradient_typ": [6, 8], "hessian_typ": [6, 8], "optimize_typ": [6, 9], "check_convergence_typ": [6, 9], "check_crossover_typ": [6, 9], "check_initialization_typ": [6, 9], "check_mutation_typ": [6, 9], "check_replacement_typ": [6, 9], "convergence_typ": [6, 9], "crossover_typ": [6, 9], "initialization_typ": [6, 9], "mutation_typ": [6, 9], "population_s": [6, 9], "replacement_typ": [6, 9], "seed": [6, 9], "type_rate_pair": [6, 9], "add_refin": [6, 9], "sample_typ": [6, 9], "refin": [6, 9], "requires_gradi": [6, 9], "requires_hessian": [6, 9], "min_boxsize_limit": [6, 9], "solution_target": [6, 9], "volume_boxsize_limit": [6, 9], "convergence_toler": [6, 9], "function_kei": [6, 9], "max_function_evalu": [6, 9], "max_iter": [6, 9], "check_search_method": [6, 9], "search_method": [6, 9], "check_merit_funct": [6, 9], "merit_funct": [6, 9], "nsampl": [6, 9], "block_nam": [6, 10], "mean": [6, 10], "fromvari": [6, 10], "nomin": [6, 10], "properti": [6, 8, 9, 10], "lower": [6, 10], "upper": [6, 10], "dtype": [6, 10], "element": [6, 10], "justifi": [6, 10], "first": 8, "second": 8, "class": [8, 9, 10], "derivative_typ": 8, "str": [8, 9, 10, 13, 14], "fd_step_siz": 8, "iter": 8, "float": [8, 9, 10], "id_numer": 8, "int": [8, 9], "id_analyt": 8, "base": [8, 9, 10], "abc": [8, 9, 10], "abstract": [8, 9, 10], "bace": 8, "attribut": [8, 9, 10], "thi": [8, 10], "meant": 8, "instanti": 8, "directli": 8, "none": [8, 9, 10], "method_sourc": 8, "interval_typ": 8, "1": 8, "step_scal": 8, "quasi_approxim": 8, "id_quasi": 8, "damp": 8, "bool": [8, 9], "fals": [8, 9, 14], "2": 8, "initial_delta": 9, "variable_toler": 9, "constrain": 9, "BY": 9, "linear": 9, "approxim": 9, "coliny_cobyla": 9, "crossover_r": 9, "mutation_r": 9, "num_par": 9, "num_offspr": 9, "flat_file_path": 9, "jega": 9, "classmethod": [9, 10], "ct": 9, "cot": 9, "mt": 9, "rt": 9, "multi_point_binari": 9, "multi_point_parameterized_binari": 9, "multi_point_r": 9, "shuffle_random": 9, "flat_fil": 9, "simple_random": 9, "unique_random": 9, "bit_random": 9, "offset_cauchi": 9, "offset_norm": 9, "offset_uniform": 9, "replace_uniform": 9, "todo": 9, "chang": 9, "soga": 9, "moga": 9, "elitist": 9, "roulette_wheel": 9, "unique_roulette_wheel": 9, "lh": 9, "refinement_sampl": 9, "all": 9, "arg": 9, "niching_typ": 9, "postprocessor_typ": 9, "kwarg": 9, "metric_track": 9, "num_gener": 9, "percent_chang": 9, "below_limit": 9, "random": 9, "ncsu_direct": 9, "nlpql": 9, "sequenti": 9, "quadrat": 9, "program": 9, "nlpql_sqp": 9, "objective_funct": 9, "max_step": 9, "gradient_toler": 9, "specul": 9, "conjug": 9, "optpp_cg": 9, "true": [9, 13], "centering_paramet": 9, "steplength_to_boundari": 9, "finit": 9, "differ": 9, "newton": 9, "optpp_fd_newton": 9, "least": 9, "squar": 9, "calibr": 9, "optpp_g_newton": 9, "The": 9, "optpp_newton": 9, "other": [9, 10], "opt": 9, "sm": 9, "gradient_based_line_search": 9, "tr_pd": 9, "trust_region": 9, "value_based_line_search": 9, "famili": 9, "local": 9, "mf": 9, "argaez_tapia": 9, "el_bakri": 9, "van_shanno": 9, "optpp": 9, "one": 9, "optpp_": 9, "search_scheme_s": 9, "simplex": 9, "free": 9, "optpp_pd": 9, "quasi": 9, "optpp_q_newton": 9, "response_funct": 9, "average_fitness_track": 9, "best_fitness_track": 9, "favor_feas": 9, "contain": 10, "std_dev": 10, "describ": 10, "normal": 10, "distribut": 10, "normal_uncertain": 10, "discret": 10, "state": 10, "cast": 10, "anoth": 10, "dict": 10, "uniform": 10, "uniform_uncertain": 10, "type": 10, "align": 10, "": 10, "valu": 10, "nice": 10, "read": [13, 14], "thing": 13, "from": 13, "file": 13, "text": [13, 14], "autosnip": 13, "95": 13, "confid": 13, "interv": 13, "moment": 13, "statist": 13, "datafram": 13, "partial": 13, "correl": 13, "matrix": 13, "pearson": 13, "spearman": 13, "rank": 13, "helper": 14, "daktoa": 14, "start": 14, "end": 14, "n": 14, "allow_eof": 14, "crude": 14, "snip": 14, "function": 14, "string": 14, "stringio": 14}, "objects": {"pandakota.input": [[8, 0, 0, "-", "derivatives"], [9, 0, 0, "-", "methods"], [10, 0, 0, "-", "variables"]], "pandakota.input.derivatives": [[8, 1, 1, "", "Derivatives"], [8, 1, 1, "", "Gradients"], [8, 1, 1, "", "Hessians"]], "pandakota.input.derivatives.Derivatives": [[8, 2, 1, "", "key"], [8, 2, 1, "", "order"], [8, 3, 1, "", "to_string"]], "pandakota.input.derivatives.Gradients": [[8, 4, 1, "", "gradient_type"], [8, 2, 1, "", "key"], [8, 2, 1, "", "order"], [8, 3, 1, "", "to_string"]], "pandakota.input.derivatives.Hessians": [[8, 4, 1, "", "hessian_type"], [8, 2, 1, "", "key"], [8, 2, 1, "", "order"], [8, 3, 1, "", "to_string"]], "pandakota.input.methods": [[9, 1, 1, "", "ColinyCobylaOptimize"], [9, 1, 1, "", "JegaOptimize"], [9, 1, 1, "", "LatinHypercubeSampling"], [9, 1, 1, "", "Method"], [9, 1, 1, "", "MogaOptimize"], [9, 1, 1, "", "MonteCarloSampling"], [9, 1, 1, "", "NcsuDirectOptimize"], [9, 1, 1, "", "NlpqlSqpOptimize"], [9, 1, 1, "", "Optimize"], [9, 1, 1, "", "OptppCgOptimize"], [9, 1, 1, "", "OptppFdNewtonOptimize"], [9, 1, 1, "", "OptppGNewtonOptimize"], [9, 1, 1, "", "OptppNewtonOptimize"], [9, 1, 1, "", "OptppOptimize"], [9, 1, 1, "", "OptppPdsOptimize"], [9, 1, 1, "", "OptppQNewtonOptimize"], [9, 1, 1, "", "Sampling"], [9, 1, 1, "", "SogaOptimize"]], "pandakota.input.methods.ColinyCobylaOptimize": [[9, 2, 1, "", "optimize_type"], [9, 3, 1, "", "to_string"]], "pandakota.input.methods.JegaOptimize": [[9, 3, 1, "", "check_convergence_type"], [9, 3, 1, "", "check_crossover_type"], [9, 3, 1, "", "check_initialization_type"], [9, 3, 1, "", "check_mutation_type"], [9, 3, 1, "", "check_replacement_type"], [9, 2, 1, "", "convergence_types"], [9, 2, 1, "", "crossover_types"], [9, 2, 1, "", "initialization_types"], [9, 2, 1, "", "mutation_types"], [9, 2, 1, "", "optimize_type"], [9, 4, 1, "", "population_size"], [9, 2, 1, "", "replacement_types"], [9, 4, 1, "", "seed"], [9, 3, 1, "", "to_string"], [9, 2, 1, "", "type_rate_pairs"]], "pandakota.input.methods.LatinHypercubeSampling": [[9, 3, 1, "", "add_refinement"], [9, 2, 1, "", "sample_type"]], "pandakota.input.methods.Method": [[9, 3, 1, "", "add_refinement"], [9, 4, 1, "", "refinements"], [9, 2, 1, "", "requires_gradients"], [9, 2, 1, "", "requires_hessians"], [9, 3, 1, "", "to_string"]], "pandakota.input.methods.MogaOptimize": [[9, 2, 1, "", "convergence_types"], [9, 2, 1, "", "optimize_type"], [9, 2, 1, "", "replacement_types"]], "pandakota.input.methods.MonteCarloSampling": [[9, 2, 1, "", "sample_type"]], "pandakota.input.methods.NcsuDirectOptimize": [[9, 4, 1, "", "min_boxsize_limit"], [9, 2, 1, "", "optimize_type"], [9, 4, 1, "", "solution_target"], [9, 3, 1, "", "to_string"], [9, 4, 1, "", "volume_boxsize_limit"]], "pandakota.input.methods.NlpqlSqpOptimize": [[9, 2, 1, "", "optimize_type"]], "pandakota.input.methods.Optimize": [[9, 4, 1, "", "convergence_tolerance"], [9, 2, 1, "", "function_key"], [9, 4, 1, "", "max_function_evaluations"], [9, 4, 1, "", "max_iterations"], [9, 2, 1, "", "optimize_type"], [9, 3, 1, "", "to_string"]], "pandakota.input.methods.OptppCgOptimize": [[9, 2, 1, "", "optimize_type"], [9, 2, 1, "", "requires_gradients"]], "pandakota.input.methods.OptppFdNewtonOptimize": [[9, 2, 1, "", "optimize_type"], [9, 2, 1, "", "requires_gradients"], [9, 2, 1, "", "requires_hessians"]], "pandakota.input.methods.OptppGNewtonOptimize": [[9, 2, 1, "", "optimize_type"], [9, 2, 1, "", "requires_gradients"], [9, 2, 1, "", "requires_hessians"]], "pandakota.input.methods.OptppNewtonOptimize": [[9, 3, 1, "", "check_search_method"], [9, 2, 1, "", "optimize_type"], [9, 2, 1, "", "requires_gradients"], [9, 2, 1, "", "requires_hessians"], [9, 2, 1, "", "search_methods"], [9, 3, 1, "", "to_string"]], "pandakota.input.methods.OptppOptimize": [[9, 3, 1, "", "check_merit_function"], [9, 2, 1, "", "merit_functions"], [9, 2, 1, "", "optimize_type"], [9, 3, 1, "", "to_string"]], "pandakota.input.methods.OptppPdsOptimize": [[9, 2, 1, "", "optimize_type"], [9, 3, 1, "", "to_string"]], "pandakota.input.methods.OptppQNewtonOptimize": [[9, 2, 1, "", "optimize_type"], [9, 2, 1, "", "requires_gradients"], [9, 2, 1, "", "requires_hessians"]], "pandakota.input.methods.Sampling": [[9, 2, 1, "", "function_key"], [9, 4, 1, "", "nsamples"], [9, 2, 1, "", "sample_type"], [9, 3, 1, "", "to_string"]], "pandakota.input.methods.SogaOptimize": [[9, 2, 1, "", "convergence_types"], [9, 2, 1, "", "optimize_type"], [9, 2, 1, "", "replacement_types"]], "pandakota.input.variables": [[10, 1, 1, "", "NormalUncertainVariable"], [10, 1, 1, "", "StateVariable"], [10, 1, 1, "", "UniformUncertainVariable"], [10, 1, 1, "", "Variable"]], "pandakota.input.variables.NormalUncertainVariable": [[10, 2, 1, "", "block_name"], [10, 4, 1, "", "mean"]], "pandakota.input.variables.StateVariable": [[10, 4, 1, "", "block_name"], [10, 3, 1, "", "fromVariable"], [10, 4, 1, "", "nominal"], [10, 4, 1, "", "properties"]], "pandakota.input.variables.UniformUncertainVariable": [[10, 2, 1, "", "block_name"], [10, 4, 1, "", "lower"], [10, 4, 1, "", "upper"]], "pandakota.input.variables.Variable": [[10, 2, 1, "", "block_name"], [10, 4, 1, "", "dtype"], [10, 4, 1, "", "element"], [10, 3, 1, "", "justify"]], "pandakota": [[12, 0, 0, "-", "reader"]], "pandakota.reader": [[13, 0, 0, "-", "output"], [14, 0, 0, "-", "utils"]], "pandakota.reader.output": [[13, 5, 1, "", "read_confidence_intervals"], [13, 5, 1, "", "read_moment_statistics"], [13, 5, 1, "", "read_partial_matrix"], [13, 5, 1, "", "read_pearson_matrix"], [13, 5, 1, "", "read_spearman_matrix"]], "pandakota.reader.utils": [[14, 5, 1, "", "snip_text"], [14, 5, 1, "", "string_to_stream"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"welcom": 0, "pandakota": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "": 0, "document": 0, "indic": 0, "tabl": 0, "packag": [2, 3, 6, 12], "subpackag": 2, "submodul": [2, 3, 6, 12], "modul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "content": [2, 3, 6, 12], "driver": [3, 4, 5], "templat": 5, "input": [6, 7, 8, 9, 10], "deck": 7, "deriv": 8, "method": 9, "variabl": 10, "name": 11, "reader": [12, 13, 14], "output": 13, "util": 14, "studi": 15}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Welcome to pandakota\u2019s documentation!": [[0, "welcome-to-pandakota-s-documentation"]], "Indices and tables": [[0, "indices-and-tables"]], "pandakota": [[1, "pandakota"]], "pandakota package": [[2, "pandakota-package"]], "Subpackages": [[2, "subpackages"]], "Submodules": [[2, "submodules"], [3, "submodules"], [6, "submodules"], [12, "submodules"]], "Module contents": [[2, "module-contents"], [3, "module-contents"], [6, "module-contents"], [12, "module-pandakota.reader"]], "pandakota.driver package": [[3, "pandakota-driver-package"]], "pandakota.driver.driver module": [[4, "pandakota-driver-driver-module"]], "pandakota.driver.template module": [[5, "pandakota-driver-template-module"]], "pandakota.input package": [[6, "pandakota-input-package"]], "pandakota.input.deck module": [[7, "pandakota-input-deck-module"]], "pandakota.input.derivatives module": [[8, "module-pandakota.input.derivatives"]], "pandakota.input.methods module": [[9, "module-pandakota.input.methods"]], "pandakota.input.variables module": [[10, "module-pandakota.input.variables"]], "pandakota.names module": [[11, "pandakota-names-module"]], "pandakota.reader package": [[12, "pandakota-reader-package"]], "pandakota.reader.output module": [[13, "module-pandakota.reader.output"]], "pandakota.reader.utils module": [[14, "module-pandakota.reader.utils"]], "pandakota.study module": [[15, "pandakota-study-module"]]}, "indexentries": {"derivatives (class in pandakota.input.derivatives)": [[8, "pandakota.input.derivatives.Derivatives"]], "gradients (class in pandakota.input.derivatives)": [[8, "pandakota.input.derivatives.Gradients"]], "hessians (class in pandakota.input.derivatives)": [[8, "pandakota.input.derivatives.Hessians"]], "gradient_type (pandakota.input.derivatives.gradients property)": [[8, "pandakota.input.derivatives.Gradients.gradient_type"]], "hessian_type (pandakota.input.derivatives.hessians property)": [[8, "pandakota.input.derivatives.Hessians.hessian_type"]], "key (pandakota.input.derivatives.derivatives attribute)": [[8, "pandakota.input.derivatives.Derivatives.key"]], "key (pandakota.input.derivatives.gradients attribute)": [[8, "pandakota.input.derivatives.Gradients.key"]], "key (pandakota.input.derivatives.hessians attribute)": [[8, "pandakota.input.derivatives.Hessians.key"]], "module": [[8, "module-pandakota.input.derivatives"], [9, "module-pandakota.input.methods"], [10, "module-pandakota.input.variables"], [12, "module-pandakota.reader"], [13, "module-pandakota.reader.output"], [14, "module-pandakota.reader.utils"]], "order (pandakota.input.derivatives.derivatives attribute)": [[8, "pandakota.input.derivatives.Derivatives.order"]], "order (pandakota.input.derivatives.gradients attribute)": [[8, "pandakota.input.derivatives.Gradients.order"]], "order (pandakota.input.derivatives.hessians attribute)": [[8, "pandakota.input.derivatives.Hessians.order"]], "pandakota.input.derivatives": [[8, "module-pandakota.input.derivatives"]], "to_string() (pandakota.input.derivatives.derivatives method)": [[8, "pandakota.input.derivatives.Derivatives.to_string"]], "to_string() (pandakota.input.derivatives.gradients method)": [[8, "pandakota.input.derivatives.Gradients.to_string"]], "to_string() (pandakota.input.derivatives.hessians method)": [[8, "pandakota.input.derivatives.Hessians.to_string"]], "colinycobylaoptimize (class in pandakota.input.methods)": [[9, "pandakota.input.methods.ColinyCobylaOptimize"]], "jegaoptimize (class in pandakota.input.methods)": [[9, "pandakota.input.methods.JegaOptimize"]], "latinhypercubesampling (class in pandakota.input.methods)": [[9, "pandakota.input.methods.LatinHypercubeSampling"]], "method (class in pandakota.input.methods)": [[9, "pandakota.input.methods.Method"]], "mogaoptimize (class in pandakota.input.methods)": [[9, "pandakota.input.methods.MogaOptimize"]], "montecarlosampling (class in pandakota.input.methods)": [[9, "pandakota.input.methods.MonteCarloSampling"]], "ncsudirectoptimize (class in pandakota.input.methods)": [[9, "pandakota.input.methods.NcsuDirectOptimize"]], "nlpqlsqpoptimize (class in pandakota.input.methods)": [[9, "pandakota.input.methods.NlpqlSqpOptimize"]], "optimize (class in pandakota.input.methods)": [[9, "pandakota.input.methods.Optimize"]], "optppcgoptimize (class in pandakota.input.methods)": [[9, "pandakota.input.methods.OptppCgOptimize"]], "optppfdnewtonoptimize (class in pandakota.input.methods)": [[9, "pandakota.input.methods.OptppFdNewtonOptimize"]], "optppgnewtonoptimize (class in pandakota.input.methods)": [[9, "pandakota.input.methods.OptppGNewtonOptimize"]], "optppnewtonoptimize (class in pandakota.input.methods)": [[9, "pandakota.input.methods.OptppNewtonOptimize"]], "optppoptimize (class in pandakota.input.methods)": [[9, "pandakota.input.methods.OptppOptimize"]], "optpppdsoptimize (class in pandakota.input.methods)": [[9, "pandakota.input.methods.OptppPdsOptimize"]], "optppqnewtonoptimize (class in pandakota.input.methods)": [[9, "pandakota.input.methods.OptppQNewtonOptimize"]], "sampling (class in pandakota.input.methods)": [[9, "pandakota.input.methods.Sampling"]], "sogaoptimize (class in pandakota.input.methods)": [[9, "pandakota.input.methods.SogaOptimize"]], "add_refinement() (pandakota.input.methods.latinhypercubesampling method)": [[9, "pandakota.input.methods.LatinHypercubeSampling.add_refinement"]], "add_refinement() (pandakota.input.methods.method method)": [[9, "pandakota.input.methods.Method.add_refinement"]], "check_convergence_type() (pandakota.input.methods.jegaoptimize class method)": [[9, "pandakota.input.methods.JegaOptimize.check_convergence_type"]], "check_crossover_type() (pandakota.input.methods.jegaoptimize class method)": [[9, "pandakota.input.methods.JegaOptimize.check_crossover_type"]], "check_initialization_type() (pandakota.input.methods.jegaoptimize class method)": [[9, "pandakota.input.methods.JegaOptimize.check_initialization_type"]], "check_merit_function() (pandakota.input.methods.optppoptimize class method)": [[9, "pandakota.input.methods.OptppOptimize.check_merit_function"]], "check_mutation_type() (pandakota.input.methods.jegaoptimize class method)": [[9, "pandakota.input.methods.JegaOptimize.check_mutation_type"]], "check_replacement_type() (pandakota.input.methods.jegaoptimize class method)": [[9, "pandakota.input.methods.JegaOptimize.check_replacement_type"]], "check_search_method() (pandakota.input.methods.optppnewtonoptimize class method)": [[9, "pandakota.input.methods.OptppNewtonOptimize.check_search_method"]], "convergence_tolerance (pandakota.input.methods.optimize property)": [[9, "pandakota.input.methods.Optimize.convergence_tolerance"]], "convergence_types (pandakota.input.methods.jegaoptimize attribute)": [[9, "pandakota.input.methods.JegaOptimize.convergence_types"]], "convergence_types (pandakota.input.methods.mogaoptimize attribute)": [[9, "pandakota.input.methods.MogaOptimize.convergence_types"]], "convergence_types (pandakota.input.methods.sogaoptimize attribute)": [[9, "pandakota.input.methods.SogaOptimize.convergence_types"]], "crossover_types (pandakota.input.methods.jegaoptimize attribute)": [[9, "pandakota.input.methods.JegaOptimize.crossover_types"]], "function_key (pandakota.input.methods.optimize attribute)": [[9, "pandakota.input.methods.Optimize.function_key"]], "function_key (pandakota.input.methods.sampling attribute)": [[9, "pandakota.input.methods.Sampling.function_key"]], "initialization_types (pandakota.input.methods.jegaoptimize attribute)": [[9, "pandakota.input.methods.JegaOptimize.initialization_types"]], "max_function_evaluations (pandakota.input.methods.optimize property)": [[9, "pandakota.input.methods.Optimize.max_function_evaluations"]], "max_iterations (pandakota.input.methods.optimize property)": [[9, "pandakota.input.methods.Optimize.max_iterations"]], "merit_functions (pandakota.input.methods.optppoptimize attribute)": [[9, "pandakota.input.methods.OptppOptimize.merit_functions"]], "min_boxsize_limit (pandakota.input.methods.ncsudirectoptimize property)": [[9, "pandakota.input.methods.NcsuDirectOptimize.min_boxsize_limit"]], "mutation_types (pandakota.input.methods.jegaoptimize attribute)": [[9, "pandakota.input.methods.JegaOptimize.mutation_types"]], "nsamples (pandakota.input.methods.sampling property)": [[9, "pandakota.input.methods.Sampling.nsamples"]], "optimize_type (pandakota.input.methods.colinycobylaoptimize attribute)": [[9, "pandakota.input.methods.ColinyCobylaOptimize.optimize_type"]], "optimize_type (pandakota.input.methods.jegaoptimize attribute)": [[9, "pandakota.input.methods.JegaOptimize.optimize_type"]], "optimize_type (pandakota.input.methods.mogaoptimize attribute)": [[9, "pandakota.input.methods.MogaOptimize.optimize_type"]], "optimize_type (pandakota.input.methods.ncsudirectoptimize attribute)": [[9, "pandakota.input.methods.NcsuDirectOptimize.optimize_type"]], "optimize_type (pandakota.input.methods.nlpqlsqpoptimize attribute)": [[9, "pandakota.input.methods.NlpqlSqpOptimize.optimize_type"]], "optimize_type (pandakota.input.methods.optimize attribute)": [[9, "pandakota.input.methods.Optimize.optimize_type"]], "optimize_type (pandakota.input.methods.optppcgoptimize attribute)": [[9, "pandakota.input.methods.OptppCgOptimize.optimize_type"]], "optimize_type (pandakota.input.methods.optppfdnewtonoptimize attribute)": [[9, "pandakota.input.methods.OptppFdNewtonOptimize.optimize_type"]], "optimize_type (pandakota.input.methods.optppgnewtonoptimize attribute)": [[9, "pandakota.input.methods.OptppGNewtonOptimize.optimize_type"]], "optimize_type (pandakota.input.methods.optppnewtonoptimize attribute)": [[9, "pandakota.input.methods.OptppNewtonOptimize.optimize_type"]], "optimize_type (pandakota.input.methods.optppoptimize attribute)": [[9, "pandakota.input.methods.OptppOptimize.optimize_type"]], "optimize_type (pandakota.input.methods.optpppdsoptimize attribute)": [[9, "pandakota.input.methods.OptppPdsOptimize.optimize_type"]], "optimize_type (pandakota.input.methods.optppqnewtonoptimize attribute)": [[9, "pandakota.input.methods.OptppQNewtonOptimize.optimize_type"]], "optimize_type (pandakota.input.methods.sogaoptimize attribute)": [[9, "pandakota.input.methods.SogaOptimize.optimize_type"]], "pandakota.input.methods": [[9, "module-pandakota.input.methods"]], "population_size (pandakota.input.methods.jegaoptimize property)": [[9, "pandakota.input.methods.JegaOptimize.population_size"]], "refinements (pandakota.input.methods.method property)": [[9, "pandakota.input.methods.Method.refinements"]], "replacement_types (pandakota.input.methods.jegaoptimize attribute)": [[9, "pandakota.input.methods.JegaOptimize.replacement_types"]], "replacement_types (pandakota.input.methods.mogaoptimize attribute)": [[9, "pandakota.input.methods.MogaOptimize.replacement_types"]], "replacement_types (pandakota.input.methods.sogaoptimize attribute)": [[9, "pandakota.input.methods.SogaOptimize.replacement_types"]], "requires_gradients (pandakota.input.methods.method attribute)": [[9, "pandakota.input.methods.Method.requires_gradients"]], "requires_gradients (pandakota.input.methods.optppcgoptimize attribute)": [[9, "pandakota.input.methods.OptppCgOptimize.requires_gradients"]], "requires_gradients (pandakota.input.methods.optppfdnewtonoptimize attribute)": [[9, "pandakota.input.methods.OptppFdNewtonOptimize.requires_gradients"]], "requires_gradients (pandakota.input.methods.optppgnewtonoptimize attribute)": [[9, "pandakota.input.methods.OptppGNewtonOptimize.requires_gradients"]], "requires_gradients (pandakota.input.methods.optppnewtonoptimize attribute)": [[9, "pandakota.input.methods.OptppNewtonOptimize.requires_gradients"]], "requires_gradients (pandakota.input.methods.optppqnewtonoptimize attribute)": [[9, "pandakota.input.methods.OptppQNewtonOptimize.requires_gradients"]], "requires_hessians (pandakota.input.methods.method attribute)": [[9, "pandakota.input.methods.Method.requires_hessians"]], "requires_hessians (pandakota.input.methods.optppfdnewtonoptimize attribute)": [[9, "pandakota.input.methods.OptppFdNewtonOptimize.requires_hessians"]], "requires_hessians (pandakota.input.methods.optppgnewtonoptimize attribute)": [[9, "pandakota.input.methods.OptppGNewtonOptimize.requires_hessians"]], "requires_hessians (pandakota.input.methods.optppnewtonoptimize attribute)": [[9, "pandakota.input.methods.OptppNewtonOptimize.requires_hessians"]], "requires_hessians (pandakota.input.methods.optppqnewtonoptimize attribute)": [[9, "pandakota.input.methods.OptppQNewtonOptimize.requires_hessians"]], "sample_type (pandakota.input.methods.latinhypercubesampling attribute)": [[9, "pandakota.input.methods.LatinHypercubeSampling.sample_type"]], "sample_type (pandakota.input.methods.montecarlosampling attribute)": [[9, "pandakota.input.methods.MonteCarloSampling.sample_type"]], "sample_type (pandakota.input.methods.sampling attribute)": [[9, "pandakota.input.methods.Sampling.sample_type"]], "search_methods (pandakota.input.methods.optppnewtonoptimize attribute)": [[9, "pandakota.input.methods.OptppNewtonOptimize.search_methods"]], "seed (pandakota.input.methods.jegaoptimize property)": [[9, "pandakota.input.methods.JegaOptimize.seed"]], "solution_target (pandakota.input.methods.ncsudirectoptimize property)": [[9, "pandakota.input.methods.NcsuDirectOptimize.solution_target"]], "to_string() (pandakota.input.methods.colinycobylaoptimize method)": [[9, "pandakota.input.methods.ColinyCobylaOptimize.to_string"]], "to_string() (pandakota.input.methods.jegaoptimize method)": [[9, "pandakota.input.methods.JegaOptimize.to_string"]], "to_string() (pandakota.input.methods.method method)": [[9, "pandakota.input.methods.Method.to_string"]], "to_string() (pandakota.input.methods.ncsudirectoptimize method)": [[9, "pandakota.input.methods.NcsuDirectOptimize.to_string"]], "to_string() (pandakota.input.methods.optimize method)": [[9, "pandakota.input.methods.Optimize.to_string"]], "to_string() (pandakota.input.methods.optppnewtonoptimize method)": [[9, "pandakota.input.methods.OptppNewtonOptimize.to_string"]], "to_string() (pandakota.input.methods.optppoptimize method)": [[9, "pandakota.input.methods.OptppOptimize.to_string"]], "to_string() (pandakota.input.methods.optpppdsoptimize method)": [[9, "pandakota.input.methods.OptppPdsOptimize.to_string"]], "to_string() (pandakota.input.methods.sampling method)": [[9, "pandakota.input.methods.Sampling.to_string"]], "type_rate_pairs (pandakota.input.methods.jegaoptimize attribute)": [[9, "pandakota.input.methods.JegaOptimize.type_rate_pairs"]], "volume_boxsize_limit (pandakota.input.methods.ncsudirectoptimize property)": [[9, "pandakota.input.methods.NcsuDirectOptimize.volume_boxsize_limit"]], "normaluncertainvariable (class in pandakota.input.variables)": [[10, "pandakota.input.variables.NormalUncertainVariable"]], "statevariable (class in pandakota.input.variables)": [[10, "pandakota.input.variables.StateVariable"]], "uniformuncertainvariable (class in pandakota.input.variables)": [[10, "pandakota.input.variables.UniformUncertainVariable"]], "variable (class in pandakota.input.variables)": [[10, "pandakota.input.variables.Variable"]], "block_name (pandakota.input.variables.normaluncertainvariable attribute)": [[10, "pandakota.input.variables.NormalUncertainVariable.block_name"]], "block_name (pandakota.input.variables.statevariable property)": [[10, "pandakota.input.variables.StateVariable.block_name"]], "block_name (pandakota.input.variables.uniformuncertainvariable attribute)": [[10, "pandakota.input.variables.UniformUncertainVariable.block_name"]], "block_name (pandakota.input.variables.variable attribute)": [[10, "pandakota.input.variables.Variable.block_name"]], "dtype (pandakota.input.variables.variable property)": [[10, "pandakota.input.variables.Variable.dtype"]], "element (pandakota.input.variables.variable property)": [[10, "pandakota.input.variables.Variable.element"]], "fromvariable() (pandakota.input.variables.statevariable class method)": [[10, "pandakota.input.variables.StateVariable.fromVariable"]], "justify() (pandakota.input.variables.variable method)": [[10, "pandakota.input.variables.Variable.justify"]], "lower (pandakota.input.variables.uniformuncertainvariable property)": [[10, "pandakota.input.variables.UniformUncertainVariable.lower"]], "mean (pandakota.input.variables.normaluncertainvariable property)": [[10, "pandakota.input.variables.NormalUncertainVariable.mean"]], "nominal (pandakota.input.variables.statevariable property)": [[10, "pandakota.input.variables.StateVariable.nominal"]], "pandakota.input.variables": [[10, "module-pandakota.input.variables"]], "properties (pandakota.input.variables.statevariable property)": [[10, "pandakota.input.variables.StateVariable.properties"]], "upper (pandakota.input.variables.uniformuncertainvariable property)": [[10, "pandakota.input.variables.UniformUncertainVariable.upper"]], "pandakota.reader": [[12, "module-pandakota.reader"]], "pandakota.reader.output": [[13, "module-pandakota.reader.output"]], "read_confidence_intervals() (in module pandakota.reader.output)": [[13, "pandakota.reader.output.read_confidence_intervals"]], "read_moment_statistics() (in module pandakota.reader.output)": [[13, "pandakota.reader.output.read_moment_statistics"]], "read_partial_matrix() (in module pandakota.reader.output)": [[13, "pandakota.reader.output.read_partial_matrix"]], "read_pearson_matrix() (in module pandakota.reader.output)": [[13, "pandakota.reader.output.read_pearson_matrix"]], "read_spearman_matrix() (in module pandakota.reader.output)": [[13, "pandakota.reader.output.read_spearman_matrix"]], "pandakota.reader.utils": [[14, "module-pandakota.reader.utils"]], "snip_text() (in module pandakota.reader.utils)": [[14, "pandakota.reader.utils.snip_text"]], "string_to_stream() (in module pandakota.reader.utils)": [[14, "pandakota.reader.utils.string_to_stream"]]}})